name: Reuse-workflow
# Controls when the workflow will run
on:
  workflow_call: 
      secrets: 
        ART_HOSTNAME:
          required: true
        REPO_NAME:
          required: true
        PROJECT_ID:
          required: true
        SERVICE_NAME:
          required: true
        DEPLOY_REGION:
          required: true
        GCR_SERVICE_ACCOUNT_KEY:
          required: true
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Run tests
      run: mvn test
      
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        service_account_key: ${{ secrets.GCR_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
        
    - name: Build and push Docker images
      run: |
        docker build -t ${{ secrets.ART_HOSTNAME }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPO_NAME }}/${{ secrets.SERVICE_NAME }}:${{ github.sha }} -f Dockerfile .
        gcloud auth configure-docker ${{ secrets.ART_HOSTNAME }} --quiet
        docker push ${{ secrets.ART_HOSTNAME }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPO_NAME }}/${{ secrets.SERVICE_NAME }}:${{ github.sha }}
        IMAGE_NAME="${{ secrets.ART_HOSTNAME }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPO_NAME }}/${{ secrets.SERVICE_NAME }}:${{ github.sha }}"
        echo $IMAGE_NAME
        
    - name: Trivy base image scanning.
      run: |
        chmod u+x ./trivy-docker-image-scan.sh
        ./trivy-docker-image-scan.sh
    - name: OPA Scaning.
      run: |
        docker run --rm -v $(pwd):/project openpolicyagent/conftest test --policy opa-docker-security.rego Dockerfile
        
    - name: Deployment yaml file security scanning
      run: |
        docker run --rm -v $(pwd):/project openpolicyagent/conftest test --policy opa-k8s-security.rego k8s_deployment_service.yaml
    
    - name: Kubesec scanning.
      run: |
         chmod u+x ./kubesec-scan.sh
         bash kubesec-scan.sh
         
    - name: Trivy scan apps image
      run: |
         chmod u+x ./trivy-k8s-scan.sh
         bash trivy-k8s-scan.sh
         
    - name: Change target image name.
      if: success()
      run: |
        sed -i 's/replace/${{ secrets.ART_HOSTNAME }}\/${{ secrets.PROJECT_ID }}\/${{ secrets.REPO_NAME }}\/${{ secrets.SERVICE_NAME }}:${{ github.sha }}/' k8s_deployment_service.yaml
        
    - name: Deploy to Kubernetes
      run: |
        gcloud compute --project "${{ secrets.PROJECT_ID }}" scp k8s_deployment_service.yaml bitbucket@"bastion-01":~/real-deployment.yaml --zone "asia-southeast1-a" --quiet
        gcloud compute ssh --zone "asia-southeast1-a" bitbucket@"bastion-01" --project "${{ secrets.PROJECT_ID }}" --command "kubectl apply -f real-deployment.yaml"
        gcloud compute ssh --zone "asia-southeast1-a" bitbucket@"bastion-01" --project "${{ secrets.PROJECT_ID }}" --command "rm -rf real-deployment.yaml"
